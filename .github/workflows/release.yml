name: release
  
permissions:
    contents: write

on:
  push:
    branches:
      - main
  workflow_call:
    inputs:
      tag:
        description: 'Tag to create'
        required: true
        default: 'v1.0.0'  # Starting version
        type: string

jobs:
  run:
    name: Release
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}  # Set the OpenAI API key as an environment variable
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          check-latest: true

      - name: Install catgpt
        run: go install github.com/ibuildthecloud/catgpt@main

      - name: Generate release message
        id: release_message
        run: |
          release_message=$(find . -name "*.go" -print0 | xargs -0 cat | catgpt "Create a release message")
          echo "::set-output name=release_message::$release_message"

      - name: Get latest release tag
        id: get_latest_tag
        run: echo "::set-output name=latest_tag::$(git describe --tags --abbrev=0)"

      - name: Calculate next version
        id: calculate_version
        run: |
          latest_tag=${{ steps.get_latest_tag.outputs.latest_tag }}
          version=$(echo "$latest_tag" | sed 's/v//' | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo "::set-output name=next_version::v$version"

      - name: Create release
        if: github.ref == 'refs/heads/main'  # Only create release if triggered by main branch
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          gh release create ${{ steps.calculate_version.outputs.next_version }} -t ${{ steps.calculate_version.outputs.next_version }} -F <(echo "${{ steps.release_message.outputs.release_message }}")

      - name: Create annotated tag
        if: github.ref == 'refs/heads/main'  # Only create tag if triggered by main branch
        run: |
          git config --global user.email "mmattox@support.tools"
          git config --global user.name "Matthew Mattox"
          git tag -a ${{ steps.calculate_version.outputs.next_version }} -m ${{ steps.calculate_version.outputs.next_version }}

      - name: Run GoReleaser
        if: github.ref == 'refs/heads/main'  # Only run GoReleaser if triggered by main branch
        uses: goreleaser/goreleaser-action@94b86e1b0200cc3baefc577476f7d63bc69ad382
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
